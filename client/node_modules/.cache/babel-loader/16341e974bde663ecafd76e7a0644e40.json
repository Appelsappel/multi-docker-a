{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruben\\\\git\\\\complex\\\\client\\\\src\\\\Fib.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\nclass Fib extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seenIndexes: [],\n      values: {},\n      index: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await axios.post('/api/values', {\n        index: this.state.index\n      });\n      this.setState({\n        index: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchValues();\n    this.fetchIndexes();\n  }\n\n  async fetchValues() {\n    // get values from api through axios\n    const values = await axios.get('/api/values/current');\n    this.setState({\n      values: values.data\n    });\n  }\n\n  async fetchIndexes() {\n    const seenIndexes = await axios.get('/api/values/all');\n    this.setState({\n      seenIndexes: seenIndexes.data\n    });\n  }\n\n  /* weergeef de indexen*/\n  renderSeenIndexes() {\n    return this.state.seenIndexes.map(({\n      number\n    }) => number).join(', ');\n  }\n  /* weergeef de values*/\n\n\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push(React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"INDEX: \", key, \" F-number: \", this.state.values[key]));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Voer de index in:\"), React.createElement(\"input\", {\n      value: this.state.index,\n      onChange: event => this.setState({\n        index: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Bereken\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Indexen die berekend zijn (staan in postgres)\"), this.renderSeenIndexes(), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Berekende waardes (staan in redis)\"), this.renderValues());\n  }\n\n}\n\nexport default Fib;","map":{"version":3,"sources":["C:/Users/ruben/git/complex/client/src/Fib.js"],"names":["React","Component","axios","Fib","state","seenIndexes","values","index","handleSubmit","event","preventDefault","post","setState","componentDidMount","fetchValues","fetchIndexes","get","data","renderSeenIndexes","map","number","join","renderValues","entries","key","push","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBG,KADwB,GAChB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADgB;;AAAA,SAyBxBC,YAzBwB,GAyBT,MAAOC,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0B;AAC5BJ,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AADU,OAA1B,CAAN;AAGA,WAAKK,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KAhCuB;AAAA;;AAOxBM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACA,SAAKC,YAAL;AACH;;AAED,QAAMD,WAAN,GAAoB;AAChB;AACA,UAAMR,MAAM,GAAG,MAAMJ,KAAK,CAACc,GAAN,CAAU,qBAAV,CAArB;AACA,SAAKJ,QAAL,CAAc;AAACN,MAAAA,MAAM,EAAEA,MAAM,CAACW;AAAhB,KAAd;AACH;;AAED,QAAMF,YAAN,GAAqB;AACjB,UAAMV,WAAW,GAAG,MAAMH,KAAK,CAACc,GAAN,CAAU,iBAAV,CAA1B;AACA,SAAKJ,QAAL,CAAc;AACVP,MAAAA,WAAW,EAAEA,WAAW,CAACY;AADf,KAAd;AAGH;;AAWD;AACAC,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2B,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAcA,MAAzC,EAAiDC,IAAjD,CAAsD,IAAtD,CAAP;AACH;AAED;;;AACAC,EAAAA,YAAY,GAAG;AACX,UAAMC,OAAO,GAAG,EAAhB;;AAEA,SAAK,IAAIC,GAAT,IAAgB,KAAKpB,KAAL,CAAWE,MAA3B,EAAmC;AAC/BiB,MAAAA,OAAO,CAACE,IAAR,CACI;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYA,GADZ,iBAC4B,KAAKpB,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CAD5B,CADJ;AAKH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AACI,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KADtB;AAEI,MAAA,QAAQ,EAAEE,KAAK,IAAI,KAAKG,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEE,KAAK,CAACkB,MAAN,CAAaC;AAAtB,OAAd,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAVJ,EAWK,KAAKV,iBAAL,EAXL,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAZJ,EAaK,KAAKI,YAAL,EAbL,CADJ;AAkBH;;AAvEuB;;AA0E5B,eAAenB,GAAf","sourcesContent":["import React, { Component} from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass Fib extends Component {\r\n    state = {\r\n      seenIndexes: [],\r\n      values: {},\r\n      index: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchValues();\r\n        this.fetchIndexes();\r\n    }\r\n\r\n    async fetchValues() {\r\n        // get values from api through axios\r\n        const values = await axios.get('/api/values/current');\r\n        this.setState({values: values.data });\r\n    }\r\n\r\n    async fetchIndexes() {\r\n        const seenIndexes = await axios.get('/api/values/all');\r\n        this.setState({\r\n            seenIndexes: seenIndexes.data\r\n        });\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        await axios.post('/api/values', {\r\n            index: this.state.index\r\n        });\r\n        this.setState({index: ''});\r\n    };\r\n\r\n    /* weergeef de indexen*/\r\n    renderSeenIndexes() {\r\n        return this.state.seenIndexes.map(({number}) => number).join(', ');\r\n    }\r\n\r\n    /* weergeef de values*/\r\n    renderValues() {\r\n        const entries = [];\r\n\r\n        for (let key in this.state.values) {\r\n            entries.push(\r\n                <div key={key}>\r\n                    INDEX: {key} F-number: {this.state.values[key]}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Voer de index in:</label>\r\n                    <input\r\n                        value={this.state.index}\r\n                        onChange={event => this.setState({ index: event.target.value})}\r\n                    />\r\n                    <button>Bereken</button>\r\n                </form>\r\n\r\n                <h3>Indexen die berekend zijn (staan in postgres)</h3>\r\n                {this.renderSeenIndexes()}\r\n                <h3>Berekende waardes (staan in redis)</h3>\r\n                {this.renderValues()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fib;\r\n"]},"metadata":{},"sourceType":"module"}